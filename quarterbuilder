#!/usr/bin/env python3

from quarters.builder.jobmanager import JobOverlord, JobDescription

import quarters.config

import time

import tornado.ioloop
import tornado.web

from multiprocessing import Manager

manager = Manager()
job_states = manager.dict()

class MainHandler(tornado.web.RequestHandler):
    def initialize( self, job_states ):
        self.job_states = job_states
    def get(self):
        self.write(str(self.job_states))

application = tornado.web.Application([
    (r"/global_status", MainHandler, dict(job_states=job_states)),
])

if __name__ == '__main__':
    config = quarters.config.read_builder('conf/builder.conf')

    # set maximum number of simultaneous chroots
    #jo = JobOverlord( config['chroots'] )
    jo = JobOverlord( 2, job_states )
    jo.start()

    pkgname = 'libuser'
    pkgurl = 'https://aur.archlinux.org/packages/' + pkgname + '/' + pkgname + '.tar.gz'

    # job description: ujid, pkgname, pkgsrc
    jd = JobDescription( '0', pkgname, pkgurl )
    jo.add_job( jd )

    time.sleep( 2 )
    jd = JobDescription( '1', pkgname, pkgurl )

    jo.add_job( jd )

    application.listen(8888)
    tornado.ioloop.IOLoop.instance().start()
